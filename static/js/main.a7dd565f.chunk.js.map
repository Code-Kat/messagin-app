{"version":3,"sources":["SidebarChat.js","Sidebar.js","axios.js","Chat.js","App.js","reportWebVitals.js","index.js"],"names":["SidebarChat","className","Avatar","Sidebar","IconButton","src","SearchOutlined","placeholder","type","instance","axios","create","baseURL","Chat","messages","useState","input","setInput","sendMessage","e","a","preventDefault","post","message","name","timestamp","received","AttachFile","map","value","onChange","target","text","onClick","App","setMessages","useEffect","get","then","response","console","log","data","channel","Pusher","cluster","subscribe","bind","newMessage","unbind_all","unsubscribe","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2YAiBeA,MAbf,WACI,OACI,sBAAKC,UAAU,cAAf,UACI,cAACC,EAAA,EAAD,IACA,sBAAKD,UAAU,oBAAf,UACI,2CACA,gECkCDE,MAlCf,WACI,OACI,sBAAKF,UAAU,UAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,sBAAKA,UAAU,sBAAf,UACI,cAACG,EAAA,EAAD,UACI,cAAC,IAAD,CAAgBH,UAAU,yBAE9B,cAACG,EAAA,EAAD,UACI,cAAC,IAAD,CAAUH,UAAU,wBAExB,cAACG,EAAA,EAAD,UACI,cAAC,IAAD,CAAcH,UAAU,+BAGhC,cAACC,EAAA,EAAD,CAAQG,IAAI,+EAEhB,qBAAKJ,UAAU,kBAAf,SACI,sBAAKA,UAAU,2BAAf,UACI,cAACK,EAAA,EAAD,CAAgBL,UAAU,4BAC1B,uBAAOM,YAAY,2BAA2BC,KAAK,cAI3D,sBAAKP,UAAU,iBAAf,UACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,W,6FC/BGQ,E,OAJEC,EAAMC,OAAO,CAC1BC,QAAS,0BCgFEC,MA3Ef,YAA6B,IAAbC,EAAY,EAAZA,SAAY,EAEAC,mBAAS,IAFT,mBAEjBC,EAFiB,KAEVC,EAFU,KAIlBC,EAAW,uCAAE,WAAOC,GAAP,SAAAC,EAAA,6DACfD,EAAEE,iBADa,SAGTX,EAAMY,KAAK,gBAAiB,CAC9BC,QAASP,EACTQ,KAAM,WACNC,UAAW,gDACXC,UAAU,IAPC,OAUfT,EAAS,IAVM,2CAAF,sDAajB,OACI,sBAAKhB,UAAU,OAAf,UACI,sBAAKA,UAAU,eAAf,UACI,cAACC,EAAA,EAAD,IAEA,sBAAKD,UAAU,mBAAf,UACI,2CACA,mDAGJ,sBAAKA,UAAU,oBAAf,UACI,cAACG,EAAA,EAAD,UACI,cAACE,EAAA,EAAD,CAAgBL,UAAU,2BAE9B,cAACG,EAAA,EAAD,UACI,cAACuB,EAAA,EAAD,CAAY1B,UAAU,uBAE1B,cAACG,EAAA,EAAD,UACI,cAAC,IAAD,CAAUH,UAAU,2BAKhC,qBAAKA,UAAU,aAAf,SACKa,EAASc,KAAI,SAACL,GAAD,OACV,oBACItB,UAAS,wBAAmBsB,EAAQG,UAAY,kBADpD,UAGI,uBAAMzB,UAAU,aAAhB,cAA+BsB,EAAQC,KAAvC,OACCD,EAAQA,QACT,sBAAMtB,UAAU,kBAAhB,SACCsB,EAAQE,oBAMrB,sBAAKxB,UAAU,eAAf,UACI,cAAC,IAAD,CAAoBA,UAAU,sBAC9B,iCACI,uBACI4B,MAAOb,EACPc,SAAW,SAAAX,GAAC,OAAGF,EAASE,EAAEY,OAAOF,QACjCtB,YAAa,iBACbyB,KAAK,SAET,wBACAC,QAASf,EACTV,KAAK,SAFL,8BAMJ,cAAC,IAAD,CAASP,UAAU,iD,iBC9BpBiC,MAxCf,WAAgB,IAAD,EACmBnB,mBAAS,IAD5B,mBACND,EADM,KACIqB,EADJ,KA4Bb,OAzBAC,qBAAU,WACR1B,EAAM2B,IAAI,kBACTC,MAAK,SAAAC,GACJC,QAAQC,IAAIF,EAASG,WAEtB,IAEHN,qBAAU,WACR,IAIMO,EAJS,IAAIC,IAAO,uBAAwB,CAChDC,QAAS,QAGYC,UAAU,YAKjC,OAJAH,EAAQI,KAAK,YAAY,SAACC,GACxBb,EAAY,GAAD,mBAAKrB,GAAL,CAAekC,QAGtB,WACJL,EAAQM,aACRN,EAAQO,iBAET,CAACpC,IAEN0B,QAAQC,IAAI3B,GAGR,qBAAKb,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,CAAMa,SAAUA,IAChB,cAAC,EAAD,UC3BOqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a7dd565f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport \"./css/SidebarChat.css\";\r\n\r\nfunction SidebarChat() {\r\n    return (\r\n        <div className=\"sidebarChat\">\r\n            <Avatar />\r\n            <div className=\"sidebarChat__info\">\r\n                <h2>Room name</h2>\r\n                <p>This is the last message</p>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarChat;\r\n","import React from 'react';\r\nimport \"./css/Sidebar.css\";\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport { SearchOutlined } from \"@material-ui/icons\";\r\nimport SidebarChat from \"./SidebarChat\";\r\n\r\n\r\nfunction Sidebar() {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar__header\">\r\n                <div className=\"sidebar__headerLeft\">\r\n                    <IconButton>\r\n                        <DonutLargeIcon className=\"sidebar__donutIcon\"/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <ChatIcon className=\"sidebar__chatIcon\"/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon className=\"sidebar__moreVertIcon\" />\r\n                    </IconButton>\r\n                </div>\r\n                <Avatar src=\"https://i.pinimg.com/736x/33/32/6d/33326dcddbf15c56d631e374b62338dc.jpg\"/>\r\n            </div>\r\n            <div className=\"sidebar__search\">\r\n                <div className=\"sidebar__searchContainer\">\r\n                    <SearchOutlined className=\"sidebar__searchOutlined\" />\r\n                    <input placeholder=\"Search or start new chat\" type=\"text\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar__chats\">\r\n            <SidebarChat />\r\n            <SidebarChat />\r\n            <SidebarChat />\r\n        </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Sidebar;\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"http://localhost:9000\"\r\n})\r\n\r\nexport default instance","import { Avatar, IconButton } from '@material-ui/core';\r\nimport { AttachFile, MoreVert, SearchOutlined } from '@material-ui/icons';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport React, { useState } from 'react';\r\nimport \"./css/Chat.css\";\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\r\nimport axios from './axios';\r\n\r\nfunction Chat({ messages }) {\r\n\r\n    const [input, setInput]=useState('');\r\n\r\n    const sendMessage =async (e) => {\r\n        e.preventDefault();\r\n\r\n        await axios.post(\"/messages/new\", {\r\n            message: input,\r\n            name: 'DEMO APP',\r\n            timestamp: \"A long time ago (in a galaxy far, far away...\",\r\n            received: false,\r\n        });\r\n\r\n        setInput(\"\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chat__header\">\r\n                <Avatar />\r\n\r\n                <div className=\"chat__headerInfo\">\r\n                    <h3>Room name</h3>\r\n                    <p>Last seen at...</p>\r\n                </div>\r\n\r\n                <div className=\"chat__headerRight\">\r\n                    <IconButton>\r\n                        <SearchOutlined className=\"chat__searchOutlined\"/>\r\n                    </IconButton>\r\n                    <IconButton> \r\n                        <AttachFile className=\"chat__attachFile\"/>\r\n                    </IconButton>\r\n                    <IconButton> \r\n                        <MoreVert className=\"chat__moreVert\"/>\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"chat__body\">\r\n                {messages.map((message) => (\r\n                    <p \r\n                        className={`chat__message ${message.received && \"chat__receiver\"}`}\r\n                    > \r\n                        <span className=\"chat__name\"> {message.name} </span>\r\n                        {message.message}               \r\n                        <span className=\"chat__timestamp\">\r\n                        {message.timestamp}</span>\r\n                    \r\n                    </p>\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"chat__footer\">\r\n                <InsertEmoticonIcon className=\"chat__footerIcons\" />\r\n                <form>\r\n                    <input\r\n                        value={input}\r\n                        onChange={(e=> setInput(e.target.value))}\r\n                        placeholder= \"Type a message\"\r\n                        text=\"text\"\r\n                    />\r\n                    <button \r\n                    onClick={sendMessage} \r\n                    type=\"submit\">\r\n                        Click to send \r\n                    </button>\r\n                </form>\r\n                <MicIcon className=\"chat__footerIcons chat__footerMicIcon\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat;\r\n","import React, {useEffect, useState } from \"react\";\nimport './App.css';\nimport Sidebar from './Sidebar';\nimport Chat from './Chat';\nimport Pusher from \"pusher-js\";\nimport axios from './axios';\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    axios.get('/messages/sync')\n    .then(response => {\n      console.log(response.data)\n    })\n  }, [])\n\n  useEffect(() => {\n    const pusher = new Pusher('2cf91c452b4b6048213a', {\n      cluster: 'ap3'\n    });\n\n    const channel = pusher.subscribe('messages');\n    channel.bind('inserted', (newMessage) => {\n      setMessages([...messages, newMessage])\n    });\n\n    return() => {\n      channel.unbind_all();\n      channel.unsubscribe();\n    }\n  }, [messages]);\n\nconsole.log(messages);\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__body\">\n        <Chat messages={messages} />\n        <Sidebar />\n        \n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}